# --------------------------------------------------------------------------------------------------
# <auto-generated>
#     This code was generated by a tool.
#     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
#     Template ID: 52
# </auto-generated>
# --------------------------------------------------------------------------------------------------

from typing import List, Union
from autoscript_sdb_microscope_client._sdb_microscope_client_extensions import SdbMicroscopeClientExtensions
from autoscript_core.common import CallRequest, DataType, DataTypeDefinition
from .service._autoscript import AutoScript
from .service._system import System
from .service._generic_access import GenericAccess


class Service(object):
    """
    The object provides service information regarding the whole microscope system and the AutoScript product.
    """
    __slots__ = ["__id", "__application_client", "__autoscript", "__system", "__generic_access"]

    def __init__(self, application_client):
        self.__application_client = application_client
        self.__id = "SdbMicroscope.Service"

        self.__autoscript = AutoScript(self.__application_client)
        self.__system = System(self.__application_client)
        self.__generic_access = GenericAccess(self.__application_client)

    @property
    def autoscript(self) -> 'AutoScript':
        """
        The object provides service information regarding the AutoScript product.
        """
        return self.__autoscript

    @property
    def system(self) -> 'System':
        """
        The object provides service information regarding the whole microscope system.
        """
        return self.__system

    @property
    def generic_access(self) -> 'GenericAccess':
        """
        The object allows accessing generic interfaces on the instrument server. Requires a special license.
        """
        return self.__generic_access
