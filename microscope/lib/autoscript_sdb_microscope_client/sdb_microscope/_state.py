# --------------------------------------------------------------------------------------------------
# <auto-generated>
#     This code was generated by a tool.
#     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
#     Template ID: 52
# </auto-generated>
# --------------------------------------------------------------------------------------------------

from typing import List, Union
from autoscript_sdb_microscope_client._sdb_microscope_client_extensions import SdbMicroscopeClientExtensions
from autoscript_core.common import CallRequest, DataType, DataTypeDefinition, UndefinedParameter
from .state._chamber_pressure import ChamberPressure
from .state._specimen_current import SpecimenCurrent


class State(object):    
    """
    The object provides status of some of the microscope's subsystems.
    """
    __slots__ = ["__id", "__application_client", "__chamber_pressure", "__specimen_current"]

    def __init__(self, application_client):
        self.__application_client = application_client
        self.__id = "SdbMicroscope.State"

        self.__chamber_pressure = ChamberPressure(self.__application_client)
        self.__specimen_current = SpecimenCurrent(self.__application_client)

    @property
    def chamber_pressure(self) -> 'ChamberPressure':        
        """
        [OBSOLETE] The object provides status of the chamber pressure.
        """
        return self.__chamber_pressure

    @property
    def specimen_current(self) -> 'SpecimenCurrent':        
        """
        The object provides control and status of the specimen current.
        """
        return self.__specimen_current
