# --------------------------------------------------------------------------------------------------
# <auto-generated>
#     This code was generated by a tool.
#     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
#     Template ID: 52
# </auto-generated>
# --------------------------------------------------------------------------------------------------

from typing import List, Union
from autoscript_sdb_microscope_client._sdb_microscope_client_extensions import SdbMicroscopeClientExtensions
from autoscript_core.common import CallRequest, DataType, DataTypeDefinition, UndefinedParameter
from .specimen._compustage import Compustage
from .specimen._manipulator import Manipulator
from .specimen._stage import Stage
from .specimen._loadlock import LoadLock
from .specimen._temperature_stage import TemperatureStage


class Specimen(object):    
    """
    The object provides control and status of the microscope's stages and manipulator.
    """
    __slots__ = ["__id", "__application_client", "__compustage", "__manipulator", "__stage", "__loadlock", "__temperature_stage"]

    def __init__(self, application_client):
        self.__application_client = application_client
        self.__id = "SdbMicroscope.Specimen"

        self.__compustage = Compustage(self.__application_client)
        self.__manipulator = Manipulator(self.__application_client)
        self.__stage = Stage(self.__application_client)
        self.__loadlock = LoadLock(self.__application_client)
        self.__temperature_stage = TemperatureStage(self.__application_client)

    @property
    def compustage(self) -> 'Compustage':        
        """
        The object provides control and status of the microscope's compustage device.
        """
        return self.__compustage

    @property
    def manipulator(self) -> 'Manipulator':        
        """
        The object provides control and status of the microscope's manipulator device.
        """
        return self.__manipulator

    @property
    def stage(self) -> 'Stage':        
        """
        The object provides control and status of the microscope's stage.
        """
        return self.__stage

    @property
    def loadlock(self) -> 'LoadLock':        
        """
        The object provides control and status of the microscope's loadlock device.
        """
        return self.__loadlock

    @property
    def temperature_stage(self) -> 'TemperatureStage':        
        """
        The object provides control and status of the microscope temperature stage.
        """
        return self.__temperature_stage
